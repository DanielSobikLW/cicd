name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs: 
    build:
        runs-on: ubuntu-latest         
        steps:
         
         - name: Checkout 
           uses: actions/checkout@v2
        
         - name: Get short SHA
           run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

         - name: Build
           uses: docker/build-push-action@v2
           with:
             tags: lwsobik/simplewhale:${{ env.GHA_SHA }},lwsobik/simplewhale:latest
             load: true
           
         - name: Scan container images for vulnerabitilies using Lacework
           uses: lacework/lw-scanner-action@v0.6.0
           with:
             LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
             LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
             IMAGE_NAME: lwsobik/simplewhale
             IMAGE_TAG: ${{ env.GHA_SHA }}
             SAVE_RESULTS_IN_LACEWORK: true
             SAVE_BUILD_REPORT: true
             BUILD_REPORT_FILE_NAME: myreport.html
             FAIL_BUILD: false
             SEVERITY_THRESHOLD: fixable
                
         - name: Login to Docker Hub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKER_HUB_USERNAME }}
             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
         - name: tag and push
           uses: docker/build-push-action@v2
           with:
             push: true
             tags: lwsobik/simplewhale:${{ env.GHA_SHA }},lwsobik/simplewhale:latest
          
         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: us-east-1
             
         - name: Trigger Deploy
           uses: Consensys/kubernetes-action@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: set image deployment/whale-dep simplewhale=lwsobik/simplewhale:${{ env.GHA_SHA }}

#           run:  |
 #            VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
  #           curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
   #          --progress-bar \
    #         --location \
     #        --remote-name
      #       chmod +x kubectl
       #      sudo mv kubectl /usr/local/bin/
             
        # - name: Install and configure kubectl
         #  env:
          #   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           #run: |
            # echo "$KUBE_CONFIG_DATA" #| base64 -d > /tmp/config \
   #          export KUBECONFIG=/tmp/config \
    #         kubectl get pods
